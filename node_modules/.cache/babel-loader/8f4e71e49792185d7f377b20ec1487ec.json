{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\DAVIS\\\\todo-app\\\\src\\\\TodoApp.js\";\nimport React from \"react\";\nimport AddTodo from \"./AddTodo.js\";\nimport TodoItem from \"./TodoItem.js\";\n\nvar TodoApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoApp, _React$Component);\n\n  function TodoApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: [],\n      filter: \"all\",\n      newValue: \"\"\n    };\n\n    _this.addTodo = function (todo) {\n      _this.setState({\n        todos: [todo].concat(_toConsumableArray(_this.state.todos))\n      });\n    };\n\n    _this.handleChange = function (id) {\n      _this.setState(function (prevState) {\n        var updatedTodos = prevState.todos.map(function (todo) {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        });\n        return {\n          todos: updatedTodos\n        };\n      });\n    };\n\n    _this.deleteTodo = function (id) {\n      _this.setState({\n        todos: _this.state.todos.filter(function (todo) {\n          return todo.id !== id;\n        })\n      });\n    };\n\n    _this.handleEdit = function (id) {\n      _this.setState(function (prevState) {\n        var updatedTodos = prevState.todos.map(function (todo) {\n          if (todo.id === id) {\n            todo.edit = true;\n          }\n\n          return todo;\n        });\n        return {\n          todos: updatedTodos\n        };\n      });\n    };\n\n    _this.newValue = function (e) {\n      var _changedText = e.target.value;\n\n      _this.setState({\n        newValue: _changedText\n      });\n    };\n\n    _this.editComplete = function (id) {\n      _this.setState(function (prevState) {\n        var updatedTodos = prevState.todos.map(function (todo) {\n          if (todo.id === id) {\n            if (todo.value !== _this.state.newValue) {\n              todo.value = _this.state.newValue;\n            }\n\n            todo.edit = false;\n          }\n\n          return todo;\n        });\n        return {\n          todos: updatedTodos\n        };\n      });\n\n      _this.setState({\n        newValue: \"\"\n      });\n\n      console.log(\"edit is done\");\n    };\n\n    _this.updateFilter = function (str) {\n      _this.setState({\n        filter: str\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var todos = [];\n\n      if (this.state.filter === \"all\") {\n        todos = this.state.todos;\n      } else if (this.state.filter === \"incomplete\") {\n        todos = this.state.todos.filter(function (todo) {\n          return !todo.completed;\n        });\n      } else if (this.state.filter === \"completed\") {\n        todos = this.state.todos.filter(function (todo) {\n          return todo.completed;\n        });\n      }\n\n      var todoItem = todos.map(function (item) {\n        return React.createElement(TodoItem, {\n          key: item.id,\n          item: item.value,\n          handleChange: _this2.handleChange,\n          newValue: _this2.newValue,\n          changedText: _this2.state.newValue,\n          todo: item,\n          onDelete: function onDelete() {\n            return _this2.deleteTodo(item.id);\n          },\n          handleEdit: function handleEdit() {\n            return _this2.handleEdit(item.id);\n          },\n          editComplete: function editComplete() {\n            return _this2.editComplete(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Todo App\"), React.createElement(AddTodo, {\n        onSubmit: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btnCtr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.updateFilter(\"completed\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Sort Completed\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return _this2.updateFilter(\"incomplete\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Sort Incompleted\"), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.updateFilter(\"all\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Show All\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, todoItem), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Incompleted Todos: \", this.state.todos.filter(function (todo) {\n        return !todo.completed;\n      }).length), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Completed Todos: \", this.state.todos.filter(function (todo) {\n        return todo.completed;\n      }).length), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Total Todos: \", this.state.todos.length));\n    }\n  }]);\n\n  return TodoApp;\n}(React.Component);\n\nexport default TodoApp;","map":{"version":3,"sources":["C:\\Users\\DAVIS\\todo-app\\src\\TodoApp.js"],"names":["React","AddTodo","TodoItem","TodoApp","state","todos","filter","newValue","addTodo","todo","setState","handleChange","id","prevState","updatedTodos","map","completed","deleteTodo","handleEdit","edit","e","_changedText","target","value","editComplete","console","log","updateFilter","str","todoItem","item","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport AddTodo from \"./AddTodo.js\"\r\nimport TodoItem from \"./TodoItem.js\"\r\n\r\n\r\nclass TodoApp extends React.Component {\r\n    state = {\r\n        todos: [],\r\n        filter: \"all\",\r\n        newValue: \"\"\r\n    }\r\n\r\n    addTodo = (todo) => {\r\n        this.setState({ \r\n            todos: [todo, ...this.state.todos] \r\n        })\r\n    }\r\n\r\n    handleChange = (id) => {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteTodo = (id) => {\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        })\r\n    }\r\n\r\n    handleEdit = (id) => {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.edit = true\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    newValue = (e) => {\r\n        let _changedText = e.target.value\r\n        this.setState({ newValue: _changedText })\r\n    }\r\n\r\n    editComplete = (id) => {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    if (todo.value !== this.state.newValue) {\r\n                        todo.value = this.state.newValue\r\n                    }\r\n                    todo.edit = false\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n        this.setState({ newValue: \"\" })\r\n        console.log(\"edit is done\")\r\n    }\r\n\r\n    updateFilter = (str) => {\r\n        this.setState({\r\n            filter: str\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let todos = []\r\n        if (this.state.filter === \"all\") {\r\n            todos = this.state.todos\r\n        } else if (this.state.filter === \"incomplete\") {\r\n            todos = this.state.todos.filter(todo => !todo.completed)\r\n        } else if (this.state.filter === \"completed\") {\r\n            todos = this.state.todos.filter(todo => todo.completed)\r\n        }\r\n\r\n        const todoItem = todos.map(item => \r\n            <TodoItem \r\n                key={item.id} \r\n                item={item.value} \r\n                handleChange={this.handleChange}\r\n                newValue={this.newValue}\r\n                changedText={this.state.newValue}\r\n                todo={item}\r\n                onDelete={() => this.deleteTodo(item.id)}\r\n                handleEdit={() => this.handleEdit(item.id)}\r\n                editComplete={() => this.editComplete(item.id)}\r\n            />)\r\n\r\n        return (\r\n            <div>\r\n                <h4>Todo App</h4>\r\n                <AddTodo onSubmit={this.addTodo} />\r\n                <br />\r\n                <div className=\"btnCtr\">\r\n                    <button className=\"btn btn-success\" onClick={() => this.updateFilter(\"completed\")}>\r\n                        Sort Completed\r\n                    </button>\r\n                    <button className=\"btn btn-danger\" onClick={() => this.updateFilter(\"incomplete\")}>\r\n                        Sort Incompleted\r\n                    </button>\r\n                    <button className=\"btn btn-primary\" onClick={() => this.updateFilter(\"all\")}>\r\n                        Show All\r\n                    </button>\r\n                </div>\r\n                <ul>\r\n                    {todoItem}\r\n                </ul>\r\n                <br />\r\n                <p>Incompleted Todos: {this.state.todos.filter(todo => !todo.completed).length}</p>\r\n                <p>Completed Todos: {this.state.todos.filter(todo => todo.completed).length}</p>\r\n                <p>Total Todos: {this.state.todos.length}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoApp"]},"metadata":{},"sourceType":"module"}